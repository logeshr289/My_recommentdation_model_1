# -*- coding: utf-8 -*-
"""recommentation for shop.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rH9P5uM2yghs6WKJwyAhRGicuPuiFnIa
"""
import numpy as np
import pandas as pd

def model(Item_Id):
    df=pd.read_csv("C:/Users/lenovo/cloth_test.csv")
    #df

    # Commented out IPython magic to ensure Python compatibility.
    import matplotlib.pyplot as plt
    import seaborn as sns
    sns.set_style('white')
    # %matplotlib inline

    df.groupby('item_id')['rating'].mean().sort_values(ascending=False).head()

    df.groupby('item_id')['rating'].count().sort_values(ascending=False).head()

    ratings = pd.DataFrame(df.groupby('item_id')['rating'].mean())
    #ratings.head()

    ratings['num of ratings'] = pd.DataFrame(df.groupby('item_id')['rating'].count())
    #ratings

    #plt.figure(figsize=(10,4))
    ratings['num of ratings'].hist(bins=70)

    #sns.jointplot(x='rating',y='num of ratings',data=ratings,alpha=0.5)

    len(pd.unique(df['item_id']))

    prod= df.pivot_table(index='user_id',columns='item_id',values='rating')

    #prod

    prod= prod.fillna(0)

    #prod

    X = prod.values.T
    X.shape

    import sklearn
    from sklearn.decomposition import TruncatedSVD

    SVD = TruncatedSVD(n_components=12, random_state=17)
    matrix = SVD.fit_transform(X)
    #matrix.shape

    import warnings
    warnings.filterwarnings("ignore",category =RuntimeWarning)
    corr = np.corrcoef(matrix)
    #corr.shape

    itemid= prod.columns
    itemid_list = list(itemid)
    item_= itemid_list.index(int(Item_Id))
    #print(item_)

    itemid_ = corr[item_]

    Recommented_item=list(itemid[(itemid_ >= 0.9)])
    list_string = map(str, Recommented_item) 
    joined_string = ",".join(list_string)

    return (joined_string)


#model(7443)